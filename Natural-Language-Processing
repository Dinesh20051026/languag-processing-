# Import required libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import PassiveAggressiveClassifier
from sklearn.metrics import accuracy_score, confusion_matrix
import nltk
nltk.download('stopwords')

# Step 1: Load your dataset
# You can use a dataset like: https://www.kaggle.com/datasets/clmentbisaillon/fake-and-real-news-dataset
df = pd.read_csv('fake_or_real_news.csv')  # Columns should include 'text' and 'label'

# Step 2: Prepare data
X = df['text']
y = df['label']  # Labels: 'FAKE' or 'REAL'

# Step 3: Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)

# Step 4: TF-IDF Vectorization
vectorizer = TfidfVectorizer(stop_words='english', max_df=0.7)
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)

# Step 5: Model training
model = PassiveAggressiveClassifier(max_iter=50)
model.fit(X_train_vec, y_train)

# Step 6: Prediction and evaluation
y_pred = model.predict(X_test_vec)
score = accuracy_score(y_test, y_pred)
cm = confusion_matrix(y_test, y_pred)

print(f'Accuracy: {round(score * 100, 2)}%')
print('Confusion Matrix:\n', cm)
